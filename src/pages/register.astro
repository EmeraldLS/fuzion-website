---
import Layout from "@/layouts/MainLayout.astro";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
const title = "Create an account";

let error = Astro.url.searchParams.get("error");

const userIp =
  Astro.request.headers.get("x-forwarded-for") || Astro.clientAddress;

const accessibleIPs = import.meta.env.AccessibleIPS.split(",");

const isIpAllowed = accessibleIPs.includes(userIp);

if (!isIpAllowed) {
  error = "Access denied. Contact Admin!";
}
---

<Layout title={title}>
  <main class="flex items-center justify-center min-h-[80svh] py-8">
    <Card className="w-full max-w-lg">
      <CardHeader className="space-y-1">
        <CardTitle className="text-2xl font-bold text-center">{title}</CardTitle
        >
        <CardDescription className="text-center">
          Enter your information to create an account
        </CardDescription>
      </CardHeader>
      <CardContent>
        {
          error && (
            <div class="mb-4 bg-red-400 text-white rounded-md p-3 text-center ">
              {error}
            </div>
          )
        }
        <form
          method="post"
          action="/api/auth/register"
          id="register-form"
          class="space-y-4"
        >
          <div class="grid grid-cols-2 gap-4">
            <div class="space-y-2">
              <Label htmlFor="fname">First name</Label>
              <Input id="fname" name="fname" required />
            </div>
            <div class="space-y-2">
              <Label htmlFor="lname">Last name</Label>
              <Input id="lname" name="lname" required />
            </div>
          </div>
          <div class="space-y-2">
            <Label htmlFor="email">Email</Label>
            <Input id="email" name="email" type="email" required />
          </div>
          <div class="space-y-2">
            <Label htmlFor="password">Password</Label>
            <Input id="password" name="password" type="password" required />
            <div id="password-strength" class="text-sm"></div>
          </div>
          <Button
            type="submit"
            id="sBtn"
            className="w-full bg-main hover:bg-main"
          >
            Create account
          </Button>
        </form>
      </CardContent>
      <CardFooter>
        <p class="text-sm text-muted-foreground text-center w-full">
          Already have an account?{" "}
          <a href="/login" class="text-blue-600 hover:underline font-medium">
            Sign in
          </a>
        </p>
      </CardFooter>
    </Card>
  </main>
</Layout>

<script>
  import { zxcvbn, zxcvbnOptions } from "@zxcvbn-ts/core";
  import * as zxcvbnCommonPackage from "@zxcvbn-ts/language-common";
  import * as zxcvbnEnPackage from "@zxcvbn-ts/language-en";

  const options = {
    translations: zxcvbnEnPackage.translations,
    graphs: zxcvbnCommonPackage.adjacencyGraphs,
    dictionary: {
      ...zxcvbnCommonPackage.dictionary,
      ...zxcvbnEnPackage.dictionary,
    },
  };

  zxcvbnOptions.setOptions(options);

  const sBtn = document.getElementById("sBtn") as HTMLButtonElement;
  const passwordInput = document.getElementById("password") as HTMLInputElement;
  const passwordStrength = document.getElementById(
    "password-strength"
  ) as HTMLDivElement;

  passwordInput.addEventListener("input", () => {
    const result = zxcvbn(passwordInput.value);
    const strength = ["Very Weak", "Weak", "Fair", "Strong", "Very Strong"];
    const color = [
      "text-red-500",
      "text-orange-500",
      "text-yellow-500",
      "text-green-500",
      "text-green-700",
    ];

    passwordStrength.textContent = `Password strength: ${strength[result.score]}`;
    passwordStrength.className = `text-sm ${color[result.score]}`;
  });
</script>
